
- @solar = Eot.new
- @solar.ajd = DateTime.now.to_time.utc.to_datetime.ajd
- @solar.ma_ta_set
- @ma = @solar.ma
- @ma_string      = @solar.string_ma_sun()
%title equationoftime.herokuapp.com/mean.haml
%h3
  :markdown
    
    ## &Mu; or mu = Mean Anomaly of the Sun
    
    &nbsp;&nbsp;&nbsp;    The Mean Anomaly of the Sun is a fictitious value based on an assumption that the 
    Earth's orbit is circular rather than eliptical and that the Earth's velocity is 
    also constant. Mean Anomaly is used as a starting point to calculate the Eccentric
    and True Anomalies. The mean anomaly is used to calculate the Equation of Center
    which will be used to calculate True Anomaly and True Longitude. True Longitude 
    is then used to calculate Right Ascension. On the Main page you see mu and nu.
    But as you will see in the next page that the Equation of Center 
    is added to mu to get nu. We use Equation of Center again to calculate 
    True Longitude which is the same as lambda. Lambda is the True Longitude.
    
    See:  
    
    ```sh
    
     http://analemma.com/Pages/EllipticalOrbit/EllipticalOrbitEffect/EllipticalOrbitEffect.html
     
     http://analemma.com/Pages/EllipticalOrbit/EllipticalOrbitEffect/E_vs_C_movie.html
    ``` 
    &nbsp;  
%br
  :markdown        
    These terms are calculated with the Universal Time Coordinate or GMT 
    of the current time.
    
    ```ruby
    
     DateTime.now.to_time.utc.to_datetime = #{DateTime.now.to_time.utc.to_datetime}
     @solar = Eot.new
     @solar.ajd = DateTime.now.to_time.utc.to_datetime.ajd.to_f
     @solar.ta_ma_set 
     @ta = @solar.ta 
    ```
    &nbsp;
%br
  :markdown
        
    The Ruby Eot#ma_Sun method was:
      
    ```ruby
    
     def ma_Sun( ta = A2000 )
       ta = check_jct_zero( ta )
       ade = delta_equinox( ta )[ 2 ] / ASD
       # setting an attribute now because we use it so much.
       @ma = mod_360 ade            
     end
    
    ```
    &nbsp;
%br
  :markdown
    
    Note: This was replaced by 
      
    ```ruby
    
     @ma = Celes.falp03(@ta)
    ```
    &nbsp;
%br
  :markdown
    
    &nbsp;&nbsp;&nbsp;  The actual algorithm was in nutation.rb which was only using ta[0]
    thanks to astro-algo gem. see /rghtascn page. Also Mean Anomaly 
    was sent back as the third argument of an array from delta_equinox( )
    method. You may see all this if you download an older version of this gem.
    The SOFA lib has all that precession and nutation code and so I used it from
    celes gem now. 
    
    ```ruby
    
     Mean Anomaly of Sun in decimal degrees right now = #{@ma * 180.0 / Math::PI} degrees
     Mean Anomaly of Sun in degrees:minutes:seconds = #{@ma_string}
    ```
    &nbsp;
%br
  :markdown  
    &nbsp;&nbsp;&nbsp;  Check it at the /analemma link. The data should be close to whatever date today is.
    Oh! But wait! That's in time difference for the two angles of mean and true
    Anomaly. See the last term Orbital. The sine wave graph gives you a better idea
    for an orbital angle if you can get the right perspective in your mind. After all,
    sine waves are nothing but graphs of a path around a circle. The quicktime movie link
    gives you an idea too. The orbital difference is zero when both paths, circle and elipse,
    are equal distances from the foci.

    &nbsp;

    ##[*Equation of Center*](/eqc)


%a{:href => "/eqc", :class => "button round"} Equation of Center
